{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M2A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>283</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Mimico NW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>284</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>The Queensway West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>285</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Royal York South West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>286</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>South of Bloor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>287</td>\n",
       "      <td>M9Z</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>288 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postcode           Borough          Neighbourhood\n",
       "0        M1A      Not assigned           Not assigned\n",
       "1        M2A      Not assigned           Not assigned\n",
       "2        M3A        North York              Parkwoods\n",
       "3        M4A        North York       Victoria Village\n",
       "4        M5A  Downtown Toronto           Harbourfront\n",
       "..       ...               ...                    ...\n",
       "283      M8Z         Etobicoke              Mimico NW\n",
       "284      M8Z         Etobicoke     The Queensway West\n",
       "285      M8Z         Etobicoke  Royal York South West\n",
       "286      M8Z         Etobicoke         South of Bloor\n",
       "287      M9Z      Not assigned           Not assigned\n",
       "\n",
       "[288 rows x 3 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Reading the wiki page and scrapping the table information \n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from pandas.io.html import read_html\n",
    "link=\"https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M\"\n",
    "tables = pd.read_html(link,header=0)[0] # 0 represents the 1st table in the link and 1 represent the 2nd table\n",
    "\n",
    "tables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M2A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Not assigned</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postcode           Borough     Neighbourhood\n",
       "0      M1A      Not assigned      Not assigned\n",
       "1      M2A      Not assigned      Not assigned\n",
       "2      M3A        North York         Parkwoods\n",
       "3      M4A        North York  Victoria Village\n",
       "4      M5A  Downtown Toronto      Harbourfront"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Converting to pandas dataframe \n",
    "PC_can=pd.DataFrame(tables)\n",
    "PC_can.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M3A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Parkwoods</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M4A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Victoria Village</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Harbourfront</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>M5A</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>Regent Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>M6A</td>\n",
       "      <td>North York</td>\n",
       "      <td>Lawrence Heights</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>282</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Kingsway Park South West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>283</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Mimico NW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>284</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>The Queensway West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>285</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>Royal York South West</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>286</td>\n",
       "      <td>M8Z</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>South of Bloor</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>211 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postcode           Borough             Neighbourhood\n",
       "2        M3A        North York                 Parkwoods\n",
       "3        M4A        North York          Victoria Village\n",
       "4        M5A  Downtown Toronto              Harbourfront\n",
       "5        M5A  Downtown Toronto               Regent Park\n",
       "6        M6A        North York          Lawrence Heights\n",
       "..       ...               ...                       ...\n",
       "282      M8Z         Etobicoke  Kingsway Park South West\n",
       "283      M8Z         Etobicoke                 Mimico NW\n",
       "284      M8Z         Etobicoke        The Queensway West\n",
       "285      M8Z         Etobicoke     Royal York South West\n",
       "286      M8Z         Etobicoke            South of Bloor\n",
       "\n",
       "[211 rows x 3 columns]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Drop rows where borough=Not assigned\n",
    "PC_cano=PC_can[PC_can.Borough!='Not assigned']\n",
    "PC_cano"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/upasanadhar/anaconda/miniconda3/envs/mlcourse/lib/python3.7/site-packages/ipykernel_launcher.py:3: FutureWarning: using a dict on a Series for aggregation\n",
      "is deprecated and will be removed in a future version. Use                 named aggregation instead.\n",
      "\n",
      "    >>> grouper.agg(name_1=func_1, name_2=func_2)\n",
      "\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Neighbourhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1B</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M1C</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M1E</td>\n",
       "      <td>West Hill, Morningside, Guildwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M1G</td>\n",
       "      <td>Woburn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M1H</td>\n",
       "      <td>Cedarbrae</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>M9N</td>\n",
       "      <td>Weston</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>M9P</td>\n",
       "      <td>Westmount</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>M9R</td>\n",
       "      <td>Martin Grove Gardens, Richview Gardens, St. Ph...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>101</td>\n",
       "      <td>M9V</td>\n",
       "      <td>Humbergate, Beaumond Heights, Silverstone, Alb...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>102</td>\n",
       "      <td>M9W</td>\n",
       "      <td>Northwest</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postcode                                      Neighbourhood\n",
       "0        M1B                                     Rouge, Malvern\n",
       "1        M1C             Highland Creek, Rouge Hill, Port Union\n",
       "2        M1E                  West Hill, Morningside, Guildwood\n",
       "3        M1G                                             Woburn\n",
       "4        M1H                                          Cedarbrae\n",
       "..       ...                                                ...\n",
       "98       M9N                                             Weston\n",
       "99       M9P                                          Westmount\n",
       "100      M9R  Martin Grove Gardens, Richview Gardens, St. Ph...\n",
       "101      M9V  Humbergate, Beaumond Heights, Silverstone, Alb...\n",
       "102      M9W                                          Northwest\n",
       "\n",
       "[103 rows x 2 columns]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = (PC_cano['Neighbourhood'].str.split(', ') #More than one neighborhood can exist in one postal code area.These two rows will be combined into one row with the neighborhoods separated with a comma\n",
    "                    .groupby(PC_cano['Postcode'])\n",
    "                    .agg({ 'Neighbourhood':lambda x: ', '.join(set(y for z in x for y in z))})\n",
    "                    .reset_index())\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Borough</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1B</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M1C</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M1E</td>\n",
       "      <td>West Hill, Morningside, Guildwood</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M1G</td>\n",
       "      <td>Woburn</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M1H</td>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>M9N</td>\n",
       "      <td>Weston</td>\n",
       "      <td>York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>M9P</td>\n",
       "      <td>Westmount</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>M9R</td>\n",
       "      <td>Martin Grove Gardens, Richview Gardens, St. Ph...</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>101</td>\n",
       "      <td>M9V</td>\n",
       "      <td>Humbergate, Beaumond Heights, Silverstone, Alb...</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>102</td>\n",
       "      <td>M9W</td>\n",
       "      <td>Northwest</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postcode                                      Neighbourhood      Borough\n",
       "0        M1B                                     Rouge, Malvern  Scarborough\n",
       "1        M1C             Highland Creek, Rouge Hill, Port Union  Scarborough\n",
       "2        M1E                  West Hill, Morningside, Guildwood  Scarborough\n",
       "3        M1G                                             Woburn  Scarborough\n",
       "4        M1H                                          Cedarbrae  Scarborough\n",
       "..       ...                                                ...          ...\n",
       "98       M9N                                             Weston         York\n",
       "99       M9P                                          Westmount    Etobicoke\n",
       "100      M9R  Martin Grove Gardens, Richview Gardens, St. Ph...    Etobicoke\n",
       "101      M9V  Humbergate, Beaumond Heights, Silverstone, Alb...    Etobicoke\n",
       "102      M9W                                          Northwest    Etobicoke\n",
       "\n",
       "[103 rows x 3 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfr=df.join(PC_cano.set_index('Postcode')[['Borough']], on='Postcode') # Adding Borough from PC_cano dataset to the df dataset with similar Postcodes\n",
    "dfr # generates new dataset but with duplicate values of Postcode since neighbourhod was not split and joined in 1st dataframe\n",
    "dfr = dfr.drop_duplicates(subset='Postcode', keep='first')#Dropping duplicate postcodes\n",
    "dfr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Borough</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>85</td>\n",
       "      <td>M7A</td>\n",
       "      <td>Not assigned</td>\n",
       "      <td>Queen's Park</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Postcode Neighbourhood       Borough\n",
       "85      M7A  Not assigned  Queen's Park"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfr.loc[dfr['Neighbourhood'] == 'Not assigned']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postcode</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Borough</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1B</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M1C</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M1E</td>\n",
       "      <td>West Hill, Morningside, Guildwood</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M1G</td>\n",
       "      <td>Woburn</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M1H</td>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>M9N</td>\n",
       "      <td>Weston</td>\n",
       "      <td>York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>M9P</td>\n",
       "      <td>Westmount</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>M9R</td>\n",
       "      <td>Martin Grove Gardens, Richview Gardens, St. Ph...</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>101</td>\n",
       "      <td>M9V</td>\n",
       "      <td>Humbergate, Beaumond Heights, Silverstone, Alb...</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>102</td>\n",
       "      <td>M9W</td>\n",
       "      <td>Northwest</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postcode                                      Neighbourhood      Borough\n",
       "0        M1B                                     Rouge, Malvern  Scarborough\n",
       "1        M1C             Highland Creek, Rouge Hill, Port Union  Scarborough\n",
       "2        M1E                  West Hill, Morningside, Guildwood  Scarborough\n",
       "3        M1G                                             Woburn  Scarborough\n",
       "4        M1H                                          Cedarbrae  Scarborough\n",
       "..       ...                                                ...          ...\n",
       "98       M9N                                             Weston         York\n",
       "99       M9P                                          Westmount    Etobicoke\n",
       "100      M9R  Martin Grove Gardens, Richview Gardens, St. Ph...    Etobicoke\n",
       "101      M9V  Humbergate, Beaumond Heights, Silverstone, Alb...    Etobicoke\n",
       "102      M9W                                          Northwest    Etobicoke\n",
       "\n",
       "[103 rows x 3 columns]"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfr_copy=dfr.copy()\n",
    "dfr_copy.loc[dfr['Neighbourhood']=='Not assigned', 'Neighbourhood'] = dfr['Borough']\n",
    "dfr_copy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Borough</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1B</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M1C</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M1E</td>\n",
       "      <td>West Hill, Morningside, Guildwood</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M1G</td>\n",
       "      <td>Woburn</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M1H</td>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>Scarborough</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>M9N</td>\n",
       "      <td>Weston</td>\n",
       "      <td>York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>M9P</td>\n",
       "      <td>Westmount</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>M9R</td>\n",
       "      <td>Martin Grove Gardens, Richview Gardens, St. Ph...</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>101</td>\n",
       "      <td>M9V</td>\n",
       "      <td>Humbergate, Beaumond Heights, Silverstone, Alb...</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>102</td>\n",
       "      <td>M9W</td>\n",
       "      <td>Northwest</td>\n",
       "      <td>Etobicoke</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postal Code                                      Neighbourhood  \\\n",
       "0           M1B                                     Rouge, Malvern   \n",
       "1           M1C             Highland Creek, Rouge Hill, Port Union   \n",
       "2           M1E                  West Hill, Morningside, Guildwood   \n",
       "3           M1G                                             Woburn   \n",
       "4           M1H                                          Cedarbrae   \n",
       "..          ...                                                ...   \n",
       "98          M9N                                             Weston   \n",
       "99          M9P                                          Westmount   \n",
       "100         M9R  Martin Grove Gardens, Richview Gardens, St. Ph...   \n",
       "101         M9V  Humbergate, Beaumond Heights, Silverstone, Alb...   \n",
       "102         M9W                                          Northwest   \n",
       "\n",
       "         Borough  \n",
       "0    Scarborough  \n",
       "1    Scarborough  \n",
       "2    Scarborough  \n",
       "3    Scarborough  \n",
       "4    Scarborough  \n",
       "..           ...  \n",
       "98          York  \n",
       "99     Etobicoke  \n",
       "100    Etobicoke  \n",
       "101    Etobicoke  \n",
       "102    Etobicoke  \n",
       "\n",
       "[103 rows x 3 columns]"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Chnage name of column Postcode to Postal code\n",
    "df1=dfr_copy.rename(columns={\"Postcode\": \"Postal Code\"})\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(103, 3)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1B</td>\n",
       "      <td>43.806686</td>\n",
       "      <td>-79.194353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M1C</td>\n",
       "      <td>43.784535</td>\n",
       "      <td>-79.160497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M1E</td>\n",
       "      <td>43.763573</td>\n",
       "      <td>-79.188711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M1G</td>\n",
       "      <td>43.770992</td>\n",
       "      <td>-79.216917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M1H</td>\n",
       "      <td>43.773136</td>\n",
       "      <td>-79.239476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>M9N</td>\n",
       "      <td>43.706876</td>\n",
       "      <td>-79.518188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>M9P</td>\n",
       "      <td>43.696319</td>\n",
       "      <td>-79.532242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>M9R</td>\n",
       "      <td>43.688905</td>\n",
       "      <td>-79.554724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>101</td>\n",
       "      <td>M9V</td>\n",
       "      <td>43.739416</td>\n",
       "      <td>-79.588437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>102</td>\n",
       "      <td>M9W</td>\n",
       "      <td>43.706748</td>\n",
       "      <td>-79.594054</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postal Code   Latitude  Longitude\n",
       "0           M1B  43.806686 -79.194353\n",
       "1           M1C  43.784535 -79.160497\n",
       "2           M1E  43.763573 -79.188711\n",
       "3           M1G  43.770992 -79.216917\n",
       "4           M1H  43.773136 -79.239476\n",
       "..          ...        ...        ...\n",
       "98          M9N  43.706876 -79.518188\n",
       "99          M9P  43.696319 -79.532242\n",
       "100         M9R  43.688905 -79.554724\n",
       "101         M9V  43.739416 -79.588437\n",
       "102         M9W  43.706748 -79.594054\n",
       "\n",
       "[103 rows x 3 columns]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "link2=\"http://cocl.us/Geospatial_data\"\n",
    "tables2 = pd.read_csv(link2) # 0 represents the 1st table in the link and 1 represent the 2nd table\n",
    "\n",
    "tables2\n",
    "PC=pd.DataFrame(tables2)\n",
    "PC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M1B</td>\n",
       "      <td>Rouge, Malvern</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>43.806686</td>\n",
       "      <td>-79.194353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M1C</td>\n",
       "      <td>Highland Creek, Rouge Hill, Port Union</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>43.784535</td>\n",
       "      <td>-79.160497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M1E</td>\n",
       "      <td>West Hill, Morningside, Guildwood</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>43.763573</td>\n",
       "      <td>-79.188711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M1G</td>\n",
       "      <td>Woburn</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>43.770992</td>\n",
       "      <td>-79.216917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M1H</td>\n",
       "      <td>Cedarbrae</td>\n",
       "      <td>Scarborough</td>\n",
       "      <td>43.773136</td>\n",
       "      <td>-79.239476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>M9N</td>\n",
       "      <td>Weston</td>\n",
       "      <td>York</td>\n",
       "      <td>43.706876</td>\n",
       "      <td>-79.518188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>M9P</td>\n",
       "      <td>Westmount</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>43.696319</td>\n",
       "      <td>-79.532242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>M9R</td>\n",
       "      <td>Martin Grove Gardens, Richview Gardens, St. Ph...</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>43.688905</td>\n",
       "      <td>-79.554724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>101</td>\n",
       "      <td>M9V</td>\n",
       "      <td>Humbergate, Beaumond Heights, Silverstone, Alb...</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>43.739416</td>\n",
       "      <td>-79.588437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>102</td>\n",
       "      <td>M9W</td>\n",
       "      <td>Northwest</td>\n",
       "      <td>Etobicoke</td>\n",
       "      <td>43.706748</td>\n",
       "      <td>-79.594054</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>103 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Postal Code                                      Neighbourhood  \\\n",
       "0           M1B                                     Rouge, Malvern   \n",
       "1           M1C             Highland Creek, Rouge Hill, Port Union   \n",
       "2           M1E                  West Hill, Morningside, Guildwood   \n",
       "3           M1G                                             Woburn   \n",
       "4           M1H                                          Cedarbrae   \n",
       "..          ...                                                ...   \n",
       "98          M9N                                             Weston   \n",
       "99          M9P                                          Westmount   \n",
       "100         M9R  Martin Grove Gardens, Richview Gardens, St. Ph...   \n",
       "101         M9V  Humbergate, Beaumond Heights, Silverstone, Alb...   \n",
       "102         M9W                                          Northwest   \n",
       "\n",
       "         Borough   Latitude  Longitude  \n",
       "0    Scarborough  43.806686 -79.194353  \n",
       "1    Scarborough  43.784535 -79.160497  \n",
       "2    Scarborough  43.763573 -79.188711  \n",
       "3    Scarborough  43.770992 -79.216917  \n",
       "4    Scarborough  43.773136 -79.239476  \n",
       "..           ...        ...        ...  \n",
       "98          York  43.706876 -79.518188  \n",
       "99     Etobicoke  43.696319 -79.532242  \n",
       "100    Etobicoke  43.688905 -79.554724  \n",
       "101    Etobicoke  43.739416 -79.588437  \n",
       "102    Etobicoke  43.706748 -79.594054  \n",
       "\n",
       "[103 rows x 5 columns]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pc=pd.merge(df1,PC, on='Postal Code')\n",
    "pc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting package metadata (current_repodata.json): done\n",
      "Solving environment: failed with current_repodata.json, will retry with next repodata source.\n",
      "Collecting package metadata (repodata.json): done\n",
      "Solving environment: failed\n",
      "\n",
      "PackagesNotFoundError: The following packages are not available from current channels:\n",
      "\n",
      "  - sklearn\n",
      "\n",
      "Current channels:\n",
      "\n",
      "  - https://conda.anaconda.org/conda-forge/osx-64\n",
      "  - https://conda.anaconda.org/conda-forge/noarch\n",
      "  - https://repo.anaconda.com/pkgs/main/osx-64\n",
      "  - https://repo.anaconda.com/pkgs/main/noarch\n",
      "  - https://repo.anaconda.com/pkgs/r/osx-64\n",
      "  - https://repo.anaconda.com/pkgs/r/noarch\n",
      "\n",
      "To search for alternate channels that may provide the conda package you're\n",
      "looking for, navigate to\n",
      "\n",
      "    https://anaconda.org\n",
      "\n",
      "and use the search bar at the top of the page.\n",
      "\n",
      "\n",
      "Collecting package metadata (current_repodata.json): done\n",
      "Solving environment: done\n",
      "\n",
      "\n",
      "==> WARNING: A newer version of conda exists. <==\n",
      "  current version: 4.7.10\n",
      "  latest version: 4.7.12\n",
      "\n",
      "Please update conda by running\n",
      "\n",
      "    $ conda update -n base -c defaults conda\n",
      "\n",
      "\n",
      "\n",
      "# All requested packages already installed.\n",
      "\n",
      "Libraries imported\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "import json\n",
    "!conda install -c conda-forge requests sklearn geopy --yes\n",
    "\n",
    "from geopy.geocoders import Nominatim\n",
    "import requests\n",
    "from pandas.io.json import json_normalize\n",
    "\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib.colors as colors\n",
    "from sklearn.cluster import KMeans \n",
    "!conda install -c conda-forge folium=0.5.0 --yes\n",
    "import folium\n",
    "print('Libraries imported')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#pd.set_option('display max_columns',None)\n",
    "\n",
    "#pd.set_option('display max_rows',None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The geographical co-ordinates of Toronto are 43.653963,-79.387207.\n"
     ]
    }
   ],
   "source": [
    "address='Toronto'\n",
    "geolocator=Nominatim(user_agent=\"To_explorer\")\n",
    "location=geolocator.geocode(address)\n",
    "latitude=location.latitude\n",
    "longitude=location.longitude\n",
    "print('The geographical co-ordinates of Toronto are {},{}.'.format(latitude,longitude))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x11ff48310>"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "map_Toronto=folium.Map(location=[43.653963,-79.387207],zoom_start=10)\n",
    "for lat,lng,borough,neighborhood in zip(pc['Latitude'],pc['Longitude'],pc['Borough'],pc['Neighbourhood']):\n",
    "    label='{},{}'.format(neighborhood,borough)\n",
    "    label=folium.Popup(label, parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "    [lat,lng],\n",
    "    radius=5,\n",
    "    popup=label,\n",
    "    color='blue',\n",
    "    fill='True',\n",
    "    fill_color='#3186cc',\n",
    "    fill_opacity=0.7,\n",
    "    parse_html=False).add_to(map_Toronto)\n",
    "    \n",
    "map_Toronto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your credentials:\n",
      "Client_ID:ZV2JW52JKPTQDUSXTD40M0YZY31SMGIUUMGUUYUUFTRXUINU\n",
      "Client_Secret:PCSWW4RIXAQAK50MIEP5ELQO04MN4OI0ZH3WFBE24AB3JZIR\n"
     ]
    }
   ],
   "source": [
    "CLIENT_ID='ZV2JW52JKPTQDUSXTD40M0YZY31SMGIUUMGUUYUUFTRXUINU'\n",
    "CLIENT_SECRET='PCSWW4RIXAQAK50MIEP5ELQO04MN4OI0ZH3WFBE24AB3JZIR'\n",
    "VERSION='20180604'\n",
    "LIMIT= 30\n",
    "print('Your credentials:')\n",
    "print('Client_ID:' + CLIENT_ID)\n",
    "print('Client_Secret:' + CLIENT_SECRET)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>37</td>\n",
       "      <td>M4E</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>41</td>\n",
       "      <td>M4K</td>\n",
       "      <td>The Danforth West, Riverdale</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.679557</td>\n",
       "      <td>-79.352188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>42</td>\n",
       "      <td>M4L</td>\n",
       "      <td>India Bazaar, The Beaches West</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.668999</td>\n",
       "      <td>-79.315572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>43</td>\n",
       "      <td>M4M</td>\n",
       "      <td>Studio District</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.659526</td>\n",
       "      <td>-79.340923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>44</td>\n",
       "      <td>M4N</td>\n",
       "      <td>Lawrence Park</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.728020</td>\n",
       "      <td>-79.388790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>45</td>\n",
       "      <td>M4P</td>\n",
       "      <td>Davisville North</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.712751</td>\n",
       "      <td>-79.390197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>46</td>\n",
       "      <td>M4R</td>\n",
       "      <td>North Toronto West</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.715383</td>\n",
       "      <td>-79.405678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>47</td>\n",
       "      <td>M4S</td>\n",
       "      <td>Davisville</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.704324</td>\n",
       "      <td>-79.388790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48</td>\n",
       "      <td>M4T</td>\n",
       "      <td>Moore Park, Summerhill East</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.689574</td>\n",
       "      <td>-79.383160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>49</td>\n",
       "      <td>M4V</td>\n",
       "      <td>Deer Park, Forest Hill SE, Rathnelly, Summerhi...</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.686412</td>\n",
       "      <td>-79.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>M4W</td>\n",
       "      <td>Rosedale</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.679563</td>\n",
       "      <td>-79.377529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>51</td>\n",
       "      <td>M4X</td>\n",
       "      <td>Cabbagetown, St. James Town</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.667967</td>\n",
       "      <td>-79.367675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>52</td>\n",
       "      <td>M4Y</td>\n",
       "      <td>Church and Wellesley</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.665860</td>\n",
       "      <td>-79.383160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>53</td>\n",
       "      <td>M5A</td>\n",
       "      <td>Regent Park, Harbourfront</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.654260</td>\n",
       "      <td>-79.360636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>54</td>\n",
       "      <td>M5B</td>\n",
       "      <td>Ryerson, Garden District</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.657162</td>\n",
       "      <td>-79.378937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>55</td>\n",
       "      <td>M5C</td>\n",
       "      <td>St. James Town</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.651494</td>\n",
       "      <td>-79.375418</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>56</td>\n",
       "      <td>M5E</td>\n",
       "      <td>Berczy Park</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.644771</td>\n",
       "      <td>-79.373306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>57</td>\n",
       "      <td>M5G</td>\n",
       "      <td>Central Bay Street</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.657952</td>\n",
       "      <td>-79.387383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>58</td>\n",
       "      <td>M5H</td>\n",
       "      <td>King, Adelaide, Richmond</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.650571</td>\n",
       "      <td>-79.384568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>59</td>\n",
       "      <td>M5J</td>\n",
       "      <td>Union Station, Toronto Islands, Harbourfront East</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.640816</td>\n",
       "      <td>-79.381752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60</td>\n",
       "      <td>M5K</td>\n",
       "      <td>Design Exchange, Toronto Dominion Centre</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.647177</td>\n",
       "      <td>-79.381576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>M5L</td>\n",
       "      <td>Victoria Hotel, Commerce Court</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.648198</td>\n",
       "      <td>-79.379817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>63</td>\n",
       "      <td>M5N</td>\n",
       "      <td>Roselawn</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.711695</td>\n",
       "      <td>-79.416936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>64</td>\n",
       "      <td>M5P</td>\n",
       "      <td>Forest Hill West, Forest Hill North</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.696948</td>\n",
       "      <td>-79.411307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>65</td>\n",
       "      <td>M5R</td>\n",
       "      <td>The Annex, North Midtown, Yorkville</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.672710</td>\n",
       "      <td>-79.405678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>66</td>\n",
       "      <td>M5S</td>\n",
       "      <td>Harbord, University of Toronto</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.662696</td>\n",
       "      <td>-79.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>67</td>\n",
       "      <td>M5T</td>\n",
       "      <td>Chinatown, Kensington Market, Grange Park</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.653206</td>\n",
       "      <td>-79.400049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>68</td>\n",
       "      <td>M5V</td>\n",
       "      <td>CN Tower, Bathurst Quay, South Niagara, Harbou...</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.628947</td>\n",
       "      <td>-79.394420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>69</td>\n",
       "      <td>M5W</td>\n",
       "      <td>Stn A PO Boxes 25 The Esplanade</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.646435</td>\n",
       "      <td>-79.374846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>70</td>\n",
       "      <td>M5X</td>\n",
       "      <td>First Canadian Place, Underground city</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.648429</td>\n",
       "      <td>-79.382280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75</td>\n",
       "      <td>M6G</td>\n",
       "      <td>Christie</td>\n",
       "      <td>Downtown Toronto</td>\n",
       "      <td>43.669542</td>\n",
       "      <td>-79.422564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>76</td>\n",
       "      <td>M6H</td>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>43.669005</td>\n",
       "      <td>-79.442259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>77</td>\n",
       "      <td>M6J</td>\n",
       "      <td>Trinity, Little Portugal</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>43.647927</td>\n",
       "      <td>-79.419750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>78</td>\n",
       "      <td>M6K</td>\n",
       "      <td>Exhibition Place, Brockton, Parkdale Village</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>43.636847</td>\n",
       "      <td>-79.428191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>82</td>\n",
       "      <td>M6P</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>43.661608</td>\n",
       "      <td>-79.464763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>83</td>\n",
       "      <td>M6R</td>\n",
       "      <td>Roncesvalles, Parkdale</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>43.648960</td>\n",
       "      <td>-79.456325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>84</td>\n",
       "      <td>M6S</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>West Toronto</td>\n",
       "      <td>43.651571</td>\n",
       "      <td>-79.484450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>87</td>\n",
       "      <td>M7Y</td>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.662744</td>\n",
       "      <td>-79.321558</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Postal Code                                      Neighbourhood  \\\n",
       "37         M4E                                        The Beaches   \n",
       "41         M4K                       The Danforth West, Riverdale   \n",
       "42         M4L                     India Bazaar, The Beaches West   \n",
       "43         M4M                                    Studio District   \n",
       "44         M4N                                      Lawrence Park   \n",
       "45         M4P                                   Davisville North   \n",
       "46         M4R                                 North Toronto West   \n",
       "47         M4S                                         Davisville   \n",
       "48         M4T                        Moore Park, Summerhill East   \n",
       "49         M4V  Deer Park, Forest Hill SE, Rathnelly, Summerhi...   \n",
       "50         M4W                                           Rosedale   \n",
       "51         M4X                        Cabbagetown, St. James Town   \n",
       "52         M4Y                               Church and Wellesley   \n",
       "53         M5A                          Regent Park, Harbourfront   \n",
       "54         M5B                           Ryerson, Garden District   \n",
       "55         M5C                                     St. James Town   \n",
       "56         M5E                                        Berczy Park   \n",
       "57         M5G                                 Central Bay Street   \n",
       "58         M5H                           King, Adelaide, Richmond   \n",
       "59         M5J  Union Station, Toronto Islands, Harbourfront East   \n",
       "60         M5K           Design Exchange, Toronto Dominion Centre   \n",
       "61         M5L                     Victoria Hotel, Commerce Court   \n",
       "63         M5N                                           Roselawn   \n",
       "64         M5P                Forest Hill West, Forest Hill North   \n",
       "65         M5R                The Annex, North Midtown, Yorkville   \n",
       "66         M5S                     Harbord, University of Toronto   \n",
       "67         M5T          Chinatown, Kensington Market, Grange Park   \n",
       "68         M5V  CN Tower, Bathurst Quay, South Niagara, Harbou...   \n",
       "69         M5W                    Stn A PO Boxes 25 The Esplanade   \n",
       "70         M5X             First Canadian Place, Underground city   \n",
       "75         M6G                                           Christie   \n",
       "76         M6H                       Dovercourt Village, Dufferin   \n",
       "77         M6J                           Trinity, Little Portugal   \n",
       "78         M6K       Exhibition Place, Brockton, Parkdale Village   \n",
       "82         M6P                      High Park, The Junction South   \n",
       "83         M6R                             Roncesvalles, Parkdale   \n",
       "84         M6S                                 Runnymede, Swansea   \n",
       "87         M7Y  Business Reply Mail Processing Centre 969 Eastern   \n",
       "\n",
       "             Borough   Latitude  Longitude  \n",
       "37      East Toronto  43.676357 -79.293031  \n",
       "41      East Toronto  43.679557 -79.352188  \n",
       "42      East Toronto  43.668999 -79.315572  \n",
       "43      East Toronto  43.659526 -79.340923  \n",
       "44   Central Toronto  43.728020 -79.388790  \n",
       "45   Central Toronto  43.712751 -79.390197  \n",
       "46   Central Toronto  43.715383 -79.405678  \n",
       "47   Central Toronto  43.704324 -79.388790  \n",
       "48   Central Toronto  43.689574 -79.383160  \n",
       "49   Central Toronto  43.686412 -79.400049  \n",
       "50  Downtown Toronto  43.679563 -79.377529  \n",
       "51  Downtown Toronto  43.667967 -79.367675  \n",
       "52  Downtown Toronto  43.665860 -79.383160  \n",
       "53  Downtown Toronto  43.654260 -79.360636  \n",
       "54  Downtown Toronto  43.657162 -79.378937  \n",
       "55  Downtown Toronto  43.651494 -79.375418  \n",
       "56  Downtown Toronto  43.644771 -79.373306  \n",
       "57  Downtown Toronto  43.657952 -79.387383  \n",
       "58  Downtown Toronto  43.650571 -79.384568  \n",
       "59  Downtown Toronto  43.640816 -79.381752  \n",
       "60  Downtown Toronto  43.647177 -79.381576  \n",
       "61  Downtown Toronto  43.648198 -79.379817  \n",
       "63   Central Toronto  43.711695 -79.416936  \n",
       "64   Central Toronto  43.696948 -79.411307  \n",
       "65   Central Toronto  43.672710 -79.405678  \n",
       "66  Downtown Toronto  43.662696 -79.400049  \n",
       "67  Downtown Toronto  43.653206 -79.400049  \n",
       "68  Downtown Toronto  43.628947 -79.394420  \n",
       "69  Downtown Toronto  43.646435 -79.374846  \n",
       "70  Downtown Toronto  43.648429 -79.382280  \n",
       "75  Downtown Toronto  43.669542 -79.422564  \n",
       "76      West Toronto  43.669005 -79.442259  \n",
       "77      West Toronto  43.647927 -79.419750  \n",
       "78      West Toronto  43.636847 -79.428191  \n",
       "82      West Toronto  43.661608 -79.464763  \n",
       "83      West Toronto  43.648960 -79.456325  \n",
       "84      West Toronto  43.651571 -79.484450  \n",
       "87      East Toronto  43.662744 -79.321558  "
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "PC_T=pc[pc['Borough'].str.contains(\"Toronto\")]\n",
    "PC_T=pd.DataFrame(PC_T)\n",
    "PC_T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The Beaches'"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#PC_T.loc[0,'Neighbourhood']\n",
    "PC_1=PC_T['Neighbourhood'].iloc[0]\n",
    "PC_1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "neighbourhood_lat=PC_T['Latitude'].iloc[0]\n",
    "neighbourhood_long=PC_T['Longitude'].iloc[0]\n",
    "neighbourhood_name=PC_T['Neighbourhood'].iloc[0]\n",
    "print('Latitude and Longitude values of {} are {},{}.'.format(neighbourhood_name,\n",
    "                                                             neighbourhood_lat,\n",
    "                                                             neighbourhood_long))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Latitude and Longitude values of 37                                          The Beaches\n",
      "41                         The Danforth West, Riverdale\n",
      "42                       India Bazaar, The Beaches West\n",
      "43                                      Studio District\n",
      "44                                        Lawrence Park\n",
      "45                                     Davisville North\n",
      "46                                   North Toronto West\n",
      "47                                           Davisville\n",
      "48                          Moore Park, Summerhill East\n",
      "49    Deer Park, Forest Hill SE, Rathnelly, Summerhi...\n",
      "50                                             Rosedale\n",
      "51                          Cabbagetown, St. James Town\n",
      "52                                 Church and Wellesley\n",
      "53                            Regent Park, Harbourfront\n",
      "54                             Ryerson, Garden District\n",
      "55                                       St. James Town\n",
      "56                                          Berczy Park\n",
      "57                                   Central Bay Street\n",
      "58                             King, Adelaide, Richmond\n",
      "59    Union Station, Toronto Islands, Harbourfront East\n",
      "60             Design Exchange, Toronto Dominion Centre\n",
      "61                       Victoria Hotel, Commerce Court\n",
      "63                                             Roselawn\n",
      "64                  Forest Hill West, Forest Hill North\n",
      "65                  The Annex, North Midtown, Yorkville\n",
      "66                       Harbord, University of Toronto\n",
      "67            Chinatown, Kensington Market, Grange Park\n",
      "68    CN Tower, Bathurst Quay, South Niagara, Harbou...\n",
      "69                      Stn A PO Boxes 25 The Esplanade\n",
      "70               First Canadian Place, Underground city\n",
      "75                                             Christie\n",
      "76                         Dovercourt Village, Dufferin\n",
      "77                             Trinity, Little Portugal\n",
      "78         Exhibition Place, Brockton, Parkdale Village\n",
      "82                        High Park, The Junction South\n",
      "83                               Roncesvalles, Parkdale\n",
      "84                                   Runnymede, Swansea\n",
      "87    Business Reply Mail Processing Centre 969 Eastern\n",
      "Name: Neighbourhood, dtype: object are 37    43.676357\n",
      "41    43.679557\n",
      "42    43.668999\n",
      "43    43.659526\n",
      "44    43.728020\n",
      "45    43.712751\n",
      "46    43.715383\n",
      "47    43.704324\n",
      "48    43.689574\n",
      "49    43.686412\n",
      "50    43.679563\n",
      "51    43.667967\n",
      "52    43.665860\n",
      "53    43.654260\n",
      "54    43.657162\n",
      "55    43.651494\n",
      "56    43.644771\n",
      "57    43.657952\n",
      "58    43.650571\n",
      "59    43.640816\n",
      "60    43.647177\n",
      "61    43.648198\n",
      "63    43.711695\n",
      "64    43.696948\n",
      "65    43.672710\n",
      "66    43.662696\n",
      "67    43.653206\n",
      "68    43.628947\n",
      "69    43.646435\n",
      "70    43.648429\n",
      "75    43.669542\n",
      "76    43.669005\n",
      "77    43.647927\n",
      "78    43.636847\n",
      "82    43.661608\n",
      "83    43.648960\n",
      "84    43.651571\n",
      "87    43.662744\n",
      "Name: Latitude, dtype: float64,37   -79.293031\n",
      "41   -79.352188\n",
      "42   -79.315572\n",
      "43   -79.340923\n",
      "44   -79.388790\n",
      "45   -79.390197\n",
      "46   -79.405678\n",
      "47   -79.388790\n",
      "48   -79.383160\n",
      "49   -79.400049\n",
      "50   -79.377529\n",
      "51   -79.367675\n",
      "52   -79.383160\n",
      "53   -79.360636\n",
      "54   -79.378937\n",
      "55   -79.375418\n",
      "56   -79.373306\n",
      "57   -79.387383\n",
      "58   -79.384568\n",
      "59   -79.381752\n",
      "60   -79.381576\n",
      "61   -79.379817\n",
      "63   -79.416936\n",
      "64   -79.411307\n",
      "65   -79.405678\n",
      "66   -79.400049\n",
      "67   -79.400049\n",
      "68   -79.394420\n",
      "69   -79.374846\n",
      "70   -79.382280\n",
      "75   -79.422564\n",
      "76   -79.442259\n",
      "77   -79.419750\n",
      "78   -79.428191\n",
      "82   -79.464763\n",
      "83   -79.456325\n",
      "84   -79.484450\n",
      "87   -79.321558\n",
      "Name: Longitude, dtype: float64.\n"
     ]
    }
   ],
   "source": [
    "PC_lat=PC_T['Latitude']\n",
    "PC_long=PC_T['Longitude']\n",
    "PC_name=PC_T['Neighbourhood']\n",
    "print('Latitude and Longitude values of {} are {},{}.'.format(PC_name,\n",
    "                                                             PC_lat,\n",
    "                                                             PC_long))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://api.foursquare.com/v2/venues/explore?&client_id=ZV2JW52JKPTQDUSXTD40M0YZY31SMGIUUMGUUYUUFTRXUINU&client_secret=PCSWW4RIXAQAK50MIEP5ELQO04MN4OI0ZH3WFBE24AB3JZIR&v=20180604&ll=37    43.676357\\n41    43.679557\\n42    43.668999\\n43    43.659526\\n44    43.728020\\n45    43.712751\\n46    43.715383\\n47    43.704324\\n48    43.689574\\n49    43.686412\\n50    43.679563\\n51    43.667967\\n52    43.665860\\n53    43.654260\\n54    43.657162\\n55    43.651494\\n56    43.644771\\n57    43.657952\\n58    43.650571\\n59    43.640816\\n60    43.647177\\n61    43.648198\\n63    43.711695\\n64    43.696948\\n65    43.672710\\n66    43.662696\\n67    43.653206\\n68    43.628947\\n69    43.646435\\n70    43.648429\\n75    43.669542\\n76    43.669005\\n77    43.647927\\n78    43.636847\\n82    43.661608\\n83    43.648960\\n84    43.651571\\n87    43.662744\\nName: Latitude, dtype: float64,37   -79.293031\\n41   -79.352188\\n42   -79.315572\\n43   -79.340923\\n44   -79.388790\\n45   -79.390197\\n46   -79.405678\\n47   -79.388790\\n48   -79.383160\\n49   -79.400049\\n50   -79.377529\\n51   -79.367675\\n52   -79.383160\\n53   -79.360636\\n54   -79.378937\\n55   -79.375418\\n56   -79.373306\\n57   -79.387383\\n58   -79.384568\\n59   -79.381752\\n60   -79.381576\\n61   -79.379817\\n63   -79.416936\\n64   -79.411307\\n65   -79.405678\\n66   -79.400049\\n67   -79.400049\\n68   -79.394420\\n69   -79.374846\\n70   -79.382280\\n75   -79.422564\\n76   -79.442259\\n77   -79.419750\\n78   -79.428191\\n82   -79.464763\\n83   -79.456325\\n84   -79.484450\\n87   -79.321558\\nName: Longitude, dtype: float64&radius=500&limit=100'"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#LIMIT=100\n",
    "#radius=500\n",
    "#query= 'restaurants'\n",
    "#url=url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "    CLIENT_ID, \n",
    "    CLIENT_SECRET, \n",
    "    VERSION, \n",
    "    PC_lat, \n",
    "    PC_long, \n",
    "    radius, \n",
    "    LIMIT)\n",
    "\n",
    "\n",
    "#url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'meta': {'code': 400,\n",
       "  'errorType': 'param_error',\n",
       "  'errorDetail': 'll must be of the form XX.XX,YY.YY (received 37    43.676357\\n41    43.679557\\n42    43.668999\\n43    43.659526\\n44    43.728020\\n45    43.712751\\n46    43.715383\\n47    43.704324\\n48    43.689574\\n49    43.686412\\n50    43.679563\\n51    43.667967\\n52    43.665860\\n53    43.654260\\n54    43.657162\\n55    43.651494\\n56    43.644771\\n57    43.657952\\n58    43.650571\\n59    43.640816\\n60    43.647177\\n61    43.648198\\n63    43.711695\\n64    43.696948\\n65    43.672710\\n66    43.662696\\n67    43.653206\\n68    43.628947\\n69    43.646435\\n70    43.648429\\n75    43.669542\\n76    43.669005\\n77    43.647927\\n78    43.636847\\n82    43.661608\\n83    43.648960\\n84    43.651571\\n87    43.662744\\nName: Latitude, dtype: float64,37   -79.293031\\n41   -79.352188\\n42   -79.315572\\n43   -79.340923\\n44   -79.388790\\n45   -79.390197\\n46   -79.405678\\n47   -79.388790\\n48   -79.383160\\n49   -79.400049\\n50   -79.377529\\n51   -79.367675\\n52   -79.383160\\n53   -79.360636\\n54   -79.378937\\n55   -79.375418\\n56   -79.373306\\n57   -79.387383\\n58   -79.384568\\n59   -79.381752\\n60   -79.381576\\n61   -79.379817\\n63   -79.416936\\n64   -79.411307\\n65   -79.405678\\n66   -79.400049\\n67   -79.400049\\n68   -79.394420\\n69   -79.374846\\n70   -79.382280\\n75   -79.422564\\n76   -79.442259\\n77   -79.419750\\n78   -79.428191\\n82   -79.464763\\n83   -79.456325\\n84   -79.484450\\n87   -79.321558\\nName: Longitude, dtype: float64)',\n",
       "  'requestId': '5da62d18be7078002ce34baa'},\n",
       " 'response': {}}"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#results= requests.get(url).json()\n",
    "#results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'groups'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-31-addc4eb09231>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#venues=results['response']['venues']\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mvenues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'response'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'groups'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'items'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mnearby_venues\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mjson_normalize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvenues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m#dataframe.head()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: 'groups'"
     ]
    }
   ],
   "source": [
    "#venues=results['response']['venues']\n",
    "#venues = results['response']['groups'][0]['items']\n",
    "#nearby_venues=json_normalize(venues)\n",
    "\n",
    "#dataframe.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#def get_category_type(row):\n",
    "    try:\n",
    "        categories_list= row['categories']\n",
    "    except:\n",
    "            categories_list= row['venue.categories']\n",
    "            \n",
    "    if len(categories_list)==0:\n",
    "        return None\n",
    "    else:\n",
    "        return categories_list[0]['name']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "venues= results['response']['groups'][0]['items']\n",
    "nearby_venues=json_normalize(venues)\n",
    "filtered_columns=['venue.name','venue.categories','venue.location.lat','venue.location.lng']\n",
    "nearby_venues=nearby_venues.loc[:,filtered_columns]\n",
    "\n",
    "nearby_venues['venue.categories']=nearby_venues.apply(get_category_type,axis=1)\n",
    "\n",
    "nearby_venues.columns=[col.split(\".\")[-1] for col in nearby_venues.columns]\n",
    "\n",
    "nearby_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4 venues were returned by Foursquare.\n"
     ]
    }
   ],
   "source": [
    "#print('{} venues were returned by Foursquare.'.format(nearby_venues.shape[0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "scrolled": true
   },
   "source": [
    "venues_map = folium.Map(location=[neighbourhood_lat, neighbourhood_long], zoom_start=15)\n",
    "# add a red circle marker to represent the BEDOKVILLE\n",
    "folium.features.CircleMarker(\n",
    "    [neighbourhood_lat, neighbourhood_long],\n",
    "    radius=10,\n",
    "    color='red',\n",
    "    popup='BEDOKVILLE',\n",
    "    fill = True,\n",
    "    fill_color = 'red',\n",
    "    fill_opacity = 0.6\n",
    ").add_to(venues_map)\n",
    "# add all venues as blue circle markers\n",
    "for lat, lng, label in zip(nearby_venues.lat, nearby_venues.lng, nearby_venues.categories):\n",
    "    folium.features.CircleMarker(\n",
    "        [lat, lng],\n",
    "        radius=5,\n",
    "        color='blue',\n",
    "        popup=label,\n",
    "        fill = True,\n",
    "        fill_color='blue',\n",
    "        fill_opacity=0.6\n",
    "    ).add_to(venues_map)\n",
    "    \n",
    "venues_map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n",
    "    venues_list=[]\n",
    "    for name, lat, lng in zip(names, latitudes, longitudes):\n",
    "        # create the API request URL\n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            LIMIT)\n",
    "        # make the GET request\n",
    "        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n",
    "        # return only relevant information for each nearby venue\n",
    "        venues_list.append([(\n",
    "            name, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'], \n",
    "            v['venue']['location']['lat'], \n",
    "            v['venue']['location']['lng'],  \n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "    nearby_venues.columns = ['Neighborhood', \n",
    "                  'Neighborhood Latitude', \n",
    "                  'Neighborhood Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Latitude', \n",
    "                  'Venue Longitude', \n",
    "                  'Venue Category']\n",
    "    return(nearby_venues)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood</th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "      <td>Glen Manor Ravine</td>\n",
       "      <td>43.676821</td>\n",
       "      <td>-79.293942</td>\n",
       "      <td>Trail</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "      <td>The Big Carrot Natural Food Market</td>\n",
       "      <td>43.678879</td>\n",
       "      <td>-79.297734</td>\n",
       "      <td>Health Food Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "      <td>Grover Pub and Grub</td>\n",
       "      <td>43.679181</td>\n",
       "      <td>-79.297215</td>\n",
       "      <td>Pub</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "      <td>Glen Stewart Ravine</td>\n",
       "      <td>43.676300</td>\n",
       "      <td>-79.294784</td>\n",
       "      <td>Other Great Outdoors</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "      <td>Upper Beaches</td>\n",
       "      <td>43.680563</td>\n",
       "      <td>-79.292869</td>\n",
       "      <td>Neighborhood</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Neighborhood  Neighborhood Latitude  Neighborhood Longitude  \\\n",
       "0  The Beaches              43.676357              -79.293031   \n",
       "1  The Beaches              43.676357              -79.293031   \n",
       "2  The Beaches              43.676357              -79.293031   \n",
       "3  The Beaches              43.676357              -79.293031   \n",
       "4  The Beaches              43.676357              -79.293031   \n",
       "\n",
       "                                Venue  Venue Latitude  Venue Longitude  \\\n",
       "0                   Glen Manor Ravine       43.676821       -79.293942   \n",
       "1  The Big Carrot Natural Food Market       43.678879       -79.297734   \n",
       "2                 Grover Pub and Grub       43.679181       -79.297215   \n",
       "3                 Glen Stewart Ravine       43.676300       -79.294784   \n",
       "4                       Upper Beaches       43.680563       -79.292869   \n",
       "\n",
       "         Venue Category  \n",
       "0                 Trail  \n",
       "1     Health Food Store  \n",
       "2                   Pub  \n",
       "3  Other Great Outdoors  \n",
       "4          Neighborhood  "
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Toronto_venues=getNearbyVenues(names= PC_T['Neighbourhood'],\n",
    "                              latitudes= PC_T['Latitude'],\n",
    "                              longitudes= PC_T['Longitude'])\n",
    "\n",
    "Toronto_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighborhood Latitude</th>\n",
       "      <th>Neighborhood Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Latitude</th>\n",
       "      <th>Venue Longitude</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Neighborhood</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Berczy Park</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>CN Tower, Bathurst Quay, South Niagara, Harbourfront West, Railway Lands, King and Spadina, Island airport</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Cabbagetown, St. James Town</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Central Bay Street</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Chinatown, Kensington Market, Grange Park</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Christie</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Church and Wellesley</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Davisville</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Davisville North</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Deer Park, Forest Hill SE, Rathnelly, Summerhill West, South Hill</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Design Exchange, Toronto Dominion Centre</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Exhibition Place, Brockton, Parkdale Village</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>First Canadian Place, Underground city</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Forest Hill West, Forest Hill North</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Harbord, University of Toronto</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>India Bazaar, The Beaches West</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>King, Adelaide, Richmond</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Lawrence Park</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Moore Park, Summerhill East</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>North Toronto West</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Regent Park, Harbourfront</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Roncesvalles, Parkdale</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Rosedale</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Roselawn</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Ryerson, Garden District</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>St. James Town</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Stn A PO Boxes 25 The Esplanade</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Studio District</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>The Annex, North Midtown, Yorkville</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>The Beaches</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>The Danforth West, Riverdale</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Trinity, Little Portugal</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Union Station, Toronto Islands, Harbourfront East</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Victoria Hotel, Commerce Court</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    Neighborhood Latitude  \\\n",
       "Neighborhood                                                                \n",
       "Berczy Park                                                            30   \n",
       "Business Reply Mail Processing Centre 969 Eastern                      19   \n",
       "CN Tower, Bathurst Quay, South Niagara, Harbour...                     15   \n",
       "Cabbagetown, St. James Town                                            30   \n",
       "Central Bay Street                                                     30   \n",
       "Chinatown, Kensington Market, Grange Park                              30   \n",
       "Christie                                                               16   \n",
       "Church and Wellesley                                                   30   \n",
       "Davisville                                                             30   \n",
       "Davisville North                                                       10   \n",
       "Deer Park, Forest Hill SE, Rathnelly, Summerhil...                     16   \n",
       "Design Exchange, Toronto Dominion Centre                               30   \n",
       "Dovercourt Village, Dufferin                                           15   \n",
       "Exhibition Place, Brockton, Parkdale Village                           27   \n",
       "First Canadian Place, Underground city                                 30   \n",
       "Forest Hill West, Forest Hill North                                     5   \n",
       "Harbord, University of Toronto                                         30   \n",
       "High Park, The Junction South                                          24   \n",
       "India Bazaar, The Beaches West                                         18   \n",
       "King, Adelaide, Richmond                                               30   \n",
       "Lawrence Park                                                           3   \n",
       "Moore Park, Summerhill East                                             4   \n",
       "North Toronto West                                                     19   \n",
       "Regent Park, Harbourfront                                              30   \n",
       "Roncesvalles, Parkdale                                                 15   \n",
       "Rosedale                                                                5   \n",
       "Roselawn                                                                2   \n",
       "Runnymede, Swansea                                                     30   \n",
       "Ryerson, Garden District                                               30   \n",
       "St. James Town                                                         30   \n",
       "Stn A PO Boxes 25 The Esplanade                                        30   \n",
       "Studio District                                                        30   \n",
       "The Annex, North Midtown, Yorkville                                    21   \n",
       "The Beaches                                                             5   \n",
       "The Danforth West, Riverdale                                           30   \n",
       "Trinity, Little Portugal                                               30   \n",
       "Union Station, Toronto Islands, Harbourfront East                      30   \n",
       "Victoria Hotel, Commerce Court                                         30   \n",
       "\n",
       "                                                    Neighborhood Longitude  \\\n",
       "Neighborhood                                                                 \n",
       "Berczy Park                                                             30   \n",
       "Business Reply Mail Processing Centre 969 Eastern                       19   \n",
       "CN Tower, Bathurst Quay, South Niagara, Harbour...                      15   \n",
       "Cabbagetown, St. James Town                                             30   \n",
       "Central Bay Street                                                      30   \n",
       "Chinatown, Kensington Market, Grange Park                               30   \n",
       "Christie                                                                16   \n",
       "Church and Wellesley                                                    30   \n",
       "Davisville                                                              30   \n",
       "Davisville North                                                        10   \n",
       "Deer Park, Forest Hill SE, Rathnelly, Summerhil...                      16   \n",
       "Design Exchange, Toronto Dominion Centre                                30   \n",
       "Dovercourt Village, Dufferin                                            15   \n",
       "Exhibition Place, Brockton, Parkdale Village                            27   \n",
       "First Canadian Place, Underground city                                  30   \n",
       "Forest Hill West, Forest Hill North                                      5   \n",
       "Harbord, University of Toronto                                          30   \n",
       "High Park, The Junction South                                           24   \n",
       "India Bazaar, The Beaches West                                          18   \n",
       "King, Adelaide, Richmond                                                30   \n",
       "Lawrence Park                                                            3   \n",
       "Moore Park, Summerhill East                                              4   \n",
       "North Toronto West                                                      19   \n",
       "Regent Park, Harbourfront                                               30   \n",
       "Roncesvalles, Parkdale                                                  15   \n",
       "Rosedale                                                                 5   \n",
       "Roselawn                                                                 2   \n",
       "Runnymede, Swansea                                                      30   \n",
       "Ryerson, Garden District                                                30   \n",
       "St. James Town                                                          30   \n",
       "Stn A PO Boxes 25 The Esplanade                                         30   \n",
       "Studio District                                                         30   \n",
       "The Annex, North Midtown, Yorkville                                     21   \n",
       "The Beaches                                                              5   \n",
       "The Danforth West, Riverdale                                            30   \n",
       "Trinity, Little Portugal                                                30   \n",
       "Union Station, Toronto Islands, Harbourfront East                       30   \n",
       "Victoria Hotel, Commerce Court                                          30   \n",
       "\n",
       "                                                    Venue  Venue Latitude  \\\n",
       "Neighborhood                                                                \n",
       "Berczy Park                                            30              30   \n",
       "Business Reply Mail Processing Centre 969 Eastern      19              19   \n",
       "CN Tower, Bathurst Quay, South Niagara, Harbour...     15              15   \n",
       "Cabbagetown, St. James Town                            30              30   \n",
       "Central Bay Street                                     30              30   \n",
       "Chinatown, Kensington Market, Grange Park              30              30   \n",
       "Christie                                               16              16   \n",
       "Church and Wellesley                                   30              30   \n",
       "Davisville                                             30              30   \n",
       "Davisville North                                       10              10   \n",
       "Deer Park, Forest Hill SE, Rathnelly, Summerhil...     16              16   \n",
       "Design Exchange, Toronto Dominion Centre               30              30   \n",
       "Dovercourt Village, Dufferin                           15              15   \n",
       "Exhibition Place, Brockton, Parkdale Village           27              27   \n",
       "First Canadian Place, Underground city                 30              30   \n",
       "Forest Hill West, Forest Hill North                     5               5   \n",
       "Harbord, University of Toronto                         30              30   \n",
       "High Park, The Junction South                          24              24   \n",
       "India Bazaar, The Beaches West                         18              18   \n",
       "King, Adelaide, Richmond                               30              30   \n",
       "Lawrence Park                                           3               3   \n",
       "Moore Park, Summerhill East                             4               4   \n",
       "North Toronto West                                     19              19   \n",
       "Regent Park, Harbourfront                              30              30   \n",
       "Roncesvalles, Parkdale                                 15              15   \n",
       "Rosedale                                                5               5   \n",
       "Roselawn                                                2               2   \n",
       "Runnymede, Swansea                                     30              30   \n",
       "Ryerson, Garden District                               30              30   \n",
       "St. James Town                                         30              30   \n",
       "Stn A PO Boxes 25 The Esplanade                        30              30   \n",
       "Studio District                                        30              30   \n",
       "The Annex, North Midtown, Yorkville                    21              21   \n",
       "The Beaches                                             5               5   \n",
       "The Danforth West, Riverdale                           30              30   \n",
       "Trinity, Little Portugal                               30              30   \n",
       "Union Station, Toronto Islands, Harbourfront East      30              30   \n",
       "Victoria Hotel, Commerce Court                         30              30   \n",
       "\n",
       "                                                    Venue Longitude  \\\n",
       "Neighborhood                                                          \n",
       "Berczy Park                                                      30   \n",
       "Business Reply Mail Processing Centre 969 Eastern                19   \n",
       "CN Tower, Bathurst Quay, South Niagara, Harbour...               15   \n",
       "Cabbagetown, St. James Town                                      30   \n",
       "Central Bay Street                                               30   \n",
       "Chinatown, Kensington Market, Grange Park                        30   \n",
       "Christie                                                         16   \n",
       "Church and Wellesley                                             30   \n",
       "Davisville                                                       30   \n",
       "Davisville North                                                 10   \n",
       "Deer Park, Forest Hill SE, Rathnelly, Summerhil...               16   \n",
       "Design Exchange, Toronto Dominion Centre                         30   \n",
       "Dovercourt Village, Dufferin                                     15   \n",
       "Exhibition Place, Brockton, Parkdale Village                     27   \n",
       "First Canadian Place, Underground city                           30   \n",
       "Forest Hill West, Forest Hill North                               5   \n",
       "Harbord, University of Toronto                                   30   \n",
       "High Park, The Junction South                                    24   \n",
       "India Bazaar, The Beaches West                                   18   \n",
       "King, Adelaide, Richmond                                         30   \n",
       "Lawrence Park                                                     3   \n",
       "Moore Park, Summerhill East                                       4   \n",
       "North Toronto West                                               19   \n",
       "Regent Park, Harbourfront                                        30   \n",
       "Roncesvalles, Parkdale                                           15   \n",
       "Rosedale                                                          5   \n",
       "Roselawn                                                          2   \n",
       "Runnymede, Swansea                                               30   \n",
       "Ryerson, Garden District                                         30   \n",
       "St. James Town                                                   30   \n",
       "Stn A PO Boxes 25 The Esplanade                                  30   \n",
       "Studio District                                                  30   \n",
       "The Annex, North Midtown, Yorkville                              21   \n",
       "The Beaches                                                       5   \n",
       "The Danforth West, Riverdale                                     30   \n",
       "Trinity, Little Portugal                                         30   \n",
       "Union Station, Toronto Islands, Harbourfront East                30   \n",
       "Victoria Hotel, Commerce Court                                   30   \n",
       "\n",
       "                                                    Venue Category  \n",
       "Neighborhood                                                        \n",
       "Berczy Park                                                     30  \n",
       "Business Reply Mail Processing Centre 969 Eastern               19  \n",
       "CN Tower, Bathurst Quay, South Niagara, Harbour...              15  \n",
       "Cabbagetown, St. James Town                                     30  \n",
       "Central Bay Street                                              30  \n",
       "Chinatown, Kensington Market, Grange Park                       30  \n",
       "Christie                                                        16  \n",
       "Church and Wellesley                                            30  \n",
       "Davisville                                                      30  \n",
       "Davisville North                                                10  \n",
       "Deer Park, Forest Hill SE, Rathnelly, Summerhil...              16  \n",
       "Design Exchange, Toronto Dominion Centre                        30  \n",
       "Dovercourt Village, Dufferin                                    15  \n",
       "Exhibition Place, Brockton, Parkdale Village                    27  \n",
       "First Canadian Place, Underground city                          30  \n",
       "Forest Hill West, Forest Hill North                              5  \n",
       "Harbord, University of Toronto                                  30  \n",
       "High Park, The Junction South                                   24  \n",
       "India Bazaar, The Beaches West                                  18  \n",
       "King, Adelaide, Richmond                                        30  \n",
       "Lawrence Park                                                    3  \n",
       "Moore Park, Summerhill East                                      4  \n",
       "North Toronto West                                              19  \n",
       "Regent Park, Harbourfront                                       30  \n",
       "Roncesvalles, Parkdale                                          15  \n",
       "Rosedale                                                         5  \n",
       "Roselawn                                                         2  \n",
       "Runnymede, Swansea                                              30  \n",
       "Ryerson, Garden District                                        30  \n",
       "St. James Town                                                  30  \n",
       "Stn A PO Boxes 25 The Esplanade                                 30  \n",
       "Studio District                                                 30  \n",
       "The Annex, North Midtown, Yorkville                             21  \n",
       "The Beaches                                                      5  \n",
       "The Danforth West, Riverdale                                    30  \n",
       "Trinity, Little Portugal                                        30  \n",
       "Union Station, Toronto Islands, Harbourfront East               30  \n",
       "Victoria Hotel, Commerce Court                                  30  "
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Toronto_venues.groupby('Neighborhood').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Airport</th>\n",
       "      <th>Airport Food Court</th>\n",
       "      <th>Airport Gate</th>\n",
       "      <th>Airport Lounge</th>\n",
       "      <th>Airport Service</th>\n",
       "      <th>Airport Terminal</th>\n",
       "      <th>American Restaurant</th>\n",
       "      <th>Aquarium</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>...</th>\n",
       "      <th>Theater</th>\n",
       "      <th>Theme Restaurant</th>\n",
       "      <th>Toy / Game Store</th>\n",
       "      <th>Trail</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Wine Bar</th>\n",
       "      <th>Yoga Studio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 189 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Neighbourhood  Airport  Airport Food Court  Airport Gate  Airport Lounge  \\\n",
       "0   The Beaches        0                   0             0               0   \n",
       "1   The Beaches        0                   0             0               0   \n",
       "2   The Beaches        0                   0             0               0   \n",
       "3   The Beaches        0                   0             0               0   \n",
       "4   The Beaches        0                   0             0               0   \n",
       "\n",
       "   Airport Service  Airport Terminal  American Restaurant  Aquarium  \\\n",
       "0                0                 0                    0         0   \n",
       "1                0                 0                    0         0   \n",
       "2                0                 0                    0         0   \n",
       "3                0                 0                    0         0   \n",
       "4                0                 0                    0         0   \n",
       "\n",
       "   Art Gallery  ...  Theater  Theme Restaurant  Toy / Game Store  Trail  \\\n",
       "0            0  ...        0                 0                 0      1   \n",
       "1            0  ...        0                 0                 0      0   \n",
       "2            0  ...        0                 0                 0      0   \n",
       "3            0  ...        0                 0                 0      0   \n",
       "4            0  ...        0                 0                 0      0   \n",
       "\n",
       "   Train Station  Vegetarian / Vegan Restaurant  Video Game Store  \\\n",
       "0              0                              0                 0   \n",
       "1              0                              0                 0   \n",
       "2              0                              0                 0   \n",
       "3              0                              0                 0   \n",
       "4              0                              0                 0   \n",
       "\n",
       "   Vietnamese Restaurant  Wine Bar  Yoga Studio  \n",
       "0                      0         0            0  \n",
       "1                      0         0            0  \n",
       "2                      0         0            0  \n",
       "3                      0         0            0  \n",
       "4                      0         0            0  \n",
       "\n",
       "[5 rows x 189 columns]"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Analyze each neighborhood\n",
    "Toronto_onehot=pd.get_dummies(Toronto_venues[['Venue Category']],prefix=\"\",prefix_sep=\"\")\n",
    "Toronto_onehot['Neighbourhood']=Toronto_venues['Neighborhood']\n",
    "fixed_columns=[Toronto_onehot.columns[-1]]+list(Toronto_onehot.columns[:-1])\n",
    "Toronto_onehot=Toronto_onehot[fixed_columns]\n",
    "Toronto_onehot.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Airport</th>\n",
       "      <th>Airport Food Court</th>\n",
       "      <th>Airport Gate</th>\n",
       "      <th>Airport Lounge</th>\n",
       "      <th>Airport Service</th>\n",
       "      <th>Airport Terminal</th>\n",
       "      <th>American Restaurant</th>\n",
       "      <th>Aquarium</th>\n",
       "      <th>Art Gallery</th>\n",
       "      <th>...</th>\n",
       "      <th>Theater</th>\n",
       "      <th>Theme Restaurant</th>\n",
       "      <th>Toy / Game Store</th>\n",
       "      <th>Trail</th>\n",
       "      <th>Train Station</th>\n",
       "      <th>Vegetarian / Vegan Restaurant</th>\n",
       "      <th>Video Game Store</th>\n",
       "      <th>Vietnamese Restaurant</th>\n",
       "      <th>Wine Bar</th>\n",
       "      <th>Yoga Studio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Berczy Park</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>CN Tower, Bathurst Quay, South Niagara, Harbou...</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.133333</td>\n",
       "      <td>0.133333</td>\n",
       "      <td>0.133333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Cabbagetown, St. James Town</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Central Bay Street</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Chinatown, Kensington Market, Grange Park</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Christie</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Church and Wellesley</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Davisville</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Davisville North</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Deer Park, Forest Hill SE, Rathnelly, Summerhi...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.062500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.062500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Design Exchange, Toronto Dominion Centre</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Dovercourt Village, Dufferin</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Exhibition Place, Brockton, Parkdale Village</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.074074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>First Canadian Place, Underground city</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>Forest Hill West, Forest Hill North</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>Harbord, University of Toronto</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>High Park, The Junction South</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>India Bazaar, The Beaches West</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>King, Adelaide, Richmond</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>Lawrence Park</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21</td>\n",
       "      <td>Moore Park, Summerhill East</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22</td>\n",
       "      <td>North Toronto West</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.052632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23</td>\n",
       "      <td>Regent Park, Harbourfront</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>Roncesvalles, Parkdale</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25</td>\n",
       "      <td>Rosedale</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>26</td>\n",
       "      <td>Roselawn</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>27</td>\n",
       "      <td>Runnymede, Swansea</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>28</td>\n",
       "      <td>Ryerson, Garden District</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>29</td>\n",
       "      <td>St. James Town</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>30</td>\n",
       "      <td>Stn A PO Boxes 25 The Esplanade</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>31</td>\n",
       "      <td>Studio District</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>32</td>\n",
       "      <td>The Annex, North Midtown, Yorkville</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>33</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>34</td>\n",
       "      <td>The Danforth West, Riverdale</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35</td>\n",
       "      <td>Trinity, Little Portugal</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.033333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>36</td>\n",
       "      <td>Union Station, Toronto Islands, Harbourfront East</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>37</td>\n",
       "      <td>Victoria Hotel, Commerce Court</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>38 rows × 189 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        Neighbourhood   Airport  \\\n",
       "0                                         Berczy Park  0.000000   \n",
       "1   Business Reply Mail Processing Centre 969 Eastern  0.000000   \n",
       "2   CN Tower, Bathurst Quay, South Niagara, Harbou...  0.066667   \n",
       "3                         Cabbagetown, St. James Town  0.000000   \n",
       "4                                  Central Bay Street  0.000000   \n",
       "5           Chinatown, Kensington Market, Grange Park  0.000000   \n",
       "6                                            Christie  0.000000   \n",
       "7                                Church and Wellesley  0.000000   \n",
       "8                                          Davisville  0.000000   \n",
       "9                                    Davisville North  0.000000   \n",
       "10  Deer Park, Forest Hill SE, Rathnelly, Summerhi...  0.000000   \n",
       "11           Design Exchange, Toronto Dominion Centre  0.000000   \n",
       "12                       Dovercourt Village, Dufferin  0.000000   \n",
       "13       Exhibition Place, Brockton, Parkdale Village  0.000000   \n",
       "14             First Canadian Place, Underground city  0.000000   \n",
       "15                Forest Hill West, Forest Hill North  0.000000   \n",
       "16                     Harbord, University of Toronto  0.000000   \n",
       "17                      High Park, The Junction South  0.000000   \n",
       "18                     India Bazaar, The Beaches West  0.000000   \n",
       "19                           King, Adelaide, Richmond  0.000000   \n",
       "20                                      Lawrence Park  0.000000   \n",
       "21                        Moore Park, Summerhill East  0.000000   \n",
       "22                                 North Toronto West  0.000000   \n",
       "23                          Regent Park, Harbourfront  0.000000   \n",
       "24                             Roncesvalles, Parkdale  0.000000   \n",
       "25                                           Rosedale  0.000000   \n",
       "26                                           Roselawn  0.000000   \n",
       "27                                 Runnymede, Swansea  0.000000   \n",
       "28                           Ryerson, Garden District  0.000000   \n",
       "29                                     St. James Town  0.000000   \n",
       "30                    Stn A PO Boxes 25 The Esplanade  0.000000   \n",
       "31                                    Studio District  0.000000   \n",
       "32                The Annex, North Midtown, Yorkville  0.000000   \n",
       "33                                        The Beaches  0.000000   \n",
       "34                       The Danforth West, Riverdale  0.000000   \n",
       "35                           Trinity, Little Portugal  0.000000   \n",
       "36  Union Station, Toronto Islands, Harbourfront East  0.000000   \n",
       "37                     Victoria Hotel, Commerce Court  0.000000   \n",
       "\n",
       "    Airport Food Court  Airport Gate  Airport Lounge  Airport Service  \\\n",
       "0             0.000000      0.000000        0.000000         0.000000   \n",
       "1             0.000000      0.000000        0.000000         0.000000   \n",
       "2             0.066667      0.066667        0.133333         0.133333   \n",
       "3             0.000000      0.000000        0.000000         0.000000   \n",
       "4             0.000000      0.000000        0.000000         0.000000   \n",
       "5             0.000000      0.000000        0.000000         0.000000   \n",
       "6             0.000000      0.000000        0.000000         0.000000   \n",
       "7             0.000000      0.000000        0.000000         0.000000   \n",
       "8             0.000000      0.000000        0.000000         0.000000   \n",
       "9             0.000000      0.000000        0.000000         0.000000   \n",
       "10            0.000000      0.000000        0.000000         0.000000   \n",
       "11            0.000000      0.000000        0.000000         0.000000   \n",
       "12            0.000000      0.000000        0.000000         0.000000   \n",
       "13            0.000000      0.000000        0.000000         0.000000   \n",
       "14            0.000000      0.000000        0.000000         0.000000   \n",
       "15            0.000000      0.000000        0.000000         0.000000   \n",
       "16            0.000000      0.000000        0.000000         0.000000   \n",
       "17            0.000000      0.000000        0.000000         0.000000   \n",
       "18            0.000000      0.000000        0.000000         0.000000   \n",
       "19            0.000000      0.000000        0.000000         0.000000   \n",
       "20            0.000000      0.000000        0.000000         0.000000   \n",
       "21            0.000000      0.000000        0.000000         0.000000   \n",
       "22            0.000000      0.000000        0.000000         0.000000   \n",
       "23            0.000000      0.000000        0.000000         0.000000   \n",
       "24            0.000000      0.000000        0.000000         0.000000   \n",
       "25            0.000000      0.000000        0.000000         0.000000   \n",
       "26            0.000000      0.000000        0.000000         0.000000   \n",
       "27            0.000000      0.000000        0.000000         0.000000   \n",
       "28            0.000000      0.000000        0.000000         0.000000   \n",
       "29            0.000000      0.000000        0.000000         0.000000   \n",
       "30            0.000000      0.000000        0.000000         0.000000   \n",
       "31            0.000000      0.000000        0.000000         0.000000   \n",
       "32            0.000000      0.000000        0.000000         0.000000   \n",
       "33            0.000000      0.000000        0.000000         0.000000   \n",
       "34            0.000000      0.000000        0.000000         0.000000   \n",
       "35            0.000000      0.000000        0.000000         0.000000   \n",
       "36            0.000000      0.000000        0.000000         0.000000   \n",
       "37            0.000000      0.000000        0.000000         0.000000   \n",
       "\n",
       "    Airport Terminal  American Restaurant  Aquarium  Art Gallery  ...  \\\n",
       "0           0.000000             0.000000  0.000000     0.033333  ...   \n",
       "1           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "2           0.133333             0.000000  0.000000     0.000000  ...   \n",
       "3           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "4           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "5           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "6           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "7           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "8           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "9           0.000000             0.000000  0.000000     0.000000  ...   \n",
       "10          0.000000             0.062500  0.000000     0.000000  ...   \n",
       "11          0.000000             0.033333  0.000000     0.033333  ...   \n",
       "12          0.000000             0.000000  0.000000     0.066667  ...   \n",
       "13          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "14          0.000000             0.033333  0.000000     0.033333  ...   \n",
       "15          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "16          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "17          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "18          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "19          0.000000             0.033333  0.000000     0.000000  ...   \n",
       "20          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "21          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "22          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "23          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "24          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "25          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "26          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "27          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "28          0.000000             0.033333  0.000000     0.033333  ...   \n",
       "29          0.000000             0.033333  0.000000     0.000000  ...   \n",
       "30          0.000000             0.000000  0.000000     0.033333  ...   \n",
       "31          0.000000             0.033333  0.000000     0.000000  ...   \n",
       "32          0.000000             0.047619  0.000000     0.000000  ...   \n",
       "33          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "34          0.000000             0.000000  0.000000     0.000000  ...   \n",
       "35          0.000000             0.000000  0.000000     0.033333  ...   \n",
       "36          0.000000             0.000000  0.033333     0.033333  ...   \n",
       "37          0.000000             0.033333  0.000000     0.033333  ...   \n",
       "\n",
       "     Theater  Theme Restaurant  Toy / Game Store     Trail  Train Station  \\\n",
       "0   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "1   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "2   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "3   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "4   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "5   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "6   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "7   0.000000          0.033333          0.000000  0.000000       0.000000   \n",
       "8   0.000000          0.000000          0.033333  0.000000       0.000000   \n",
       "9   0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "10  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "11  0.000000          0.000000          0.000000  0.000000       0.033333   \n",
       "12  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "13  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "14  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "15  0.000000          0.000000          0.000000  0.200000       0.000000   \n",
       "16  0.033333          0.000000          0.000000  0.000000       0.000000   \n",
       "17  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "18  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "19  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "20  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "21  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "22  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "23  0.033333          0.000000          0.000000  0.000000       0.000000   \n",
       "24  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "25  0.000000          0.000000          0.000000  0.200000       0.000000   \n",
       "26  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "27  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "28  0.033333          0.000000          0.000000  0.000000       0.000000   \n",
       "29  0.033333          0.000000          0.000000  0.000000       0.000000   \n",
       "30  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "31  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "32  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "33  0.000000          0.000000          0.000000  0.200000       0.000000   \n",
       "34  0.000000          0.000000          0.000000  0.033333       0.000000   \n",
       "35  0.033333          0.000000          0.000000  0.000000       0.000000   \n",
       "36  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "37  0.000000          0.000000          0.000000  0.000000       0.000000   \n",
       "\n",
       "    Vegetarian / Vegan Restaurant  Video Game Store  Vietnamese Restaurant  \\\n",
       "0                        0.033333          0.000000               0.000000   \n",
       "1                        0.000000          0.000000               0.000000   \n",
       "2                        0.000000          0.000000               0.000000   \n",
       "3                        0.000000          0.000000               0.000000   \n",
       "4                        0.000000          0.000000               0.000000   \n",
       "5                        0.033333          0.000000               0.066667   \n",
       "6                        0.000000          0.000000               0.000000   \n",
       "7                        0.000000          0.000000               0.000000   \n",
       "8                        0.000000          0.000000               0.000000   \n",
       "9                        0.000000          0.000000               0.000000   \n",
       "10                       0.000000          0.000000               0.062500   \n",
       "11                       0.000000          0.000000               0.000000   \n",
       "12                       0.000000          0.000000               0.000000   \n",
       "13                       0.000000          0.000000               0.000000   \n",
       "14                       0.033333          0.000000               0.000000   \n",
       "15                       0.000000          0.000000               0.000000   \n",
       "16                       0.000000          0.033333               0.000000   \n",
       "17                       0.000000          0.000000               0.000000   \n",
       "18                       0.000000          0.000000               0.000000   \n",
       "19                       0.033333          0.000000               0.000000   \n",
       "20                       0.000000          0.000000               0.000000   \n",
       "21                       0.000000          0.000000               0.000000   \n",
       "22                       0.000000          0.000000               0.000000   \n",
       "23                       0.000000          0.000000               0.000000   \n",
       "24                       0.000000          0.000000               0.000000   \n",
       "25                       0.000000          0.000000               0.000000   \n",
       "26                       0.000000          0.000000               0.000000   \n",
       "27                       0.033333          0.000000               0.000000   \n",
       "28                       0.033333          0.000000               0.000000   \n",
       "29                       0.000000          0.000000               0.000000   \n",
       "30                       0.033333          0.000000               0.000000   \n",
       "31                       0.000000          0.000000               0.000000   \n",
       "32                       0.047619          0.000000               0.000000   \n",
       "33                       0.000000          0.000000               0.000000   \n",
       "34                       0.000000          0.000000               0.000000   \n",
       "35                       0.000000          0.000000               0.066667   \n",
       "36                       0.000000          0.000000               0.000000   \n",
       "37                       0.000000          0.000000               0.000000   \n",
       "\n",
       "    Wine Bar  Yoga Studio  \n",
       "0   0.000000     0.000000  \n",
       "1   0.000000     0.052632  \n",
       "2   0.000000     0.000000  \n",
       "3   0.000000     0.000000  \n",
       "4   0.000000     0.000000  \n",
       "5   0.033333     0.000000  \n",
       "6   0.000000     0.000000  \n",
       "7   0.000000     0.000000  \n",
       "8   0.000000     0.000000  \n",
       "9   0.000000     0.000000  \n",
       "10  0.000000     0.000000  \n",
       "11  0.000000     0.000000  \n",
       "12  0.000000     0.000000  \n",
       "13  0.000000     0.074074  \n",
       "14  0.000000     0.000000  \n",
       "15  0.000000     0.000000  \n",
       "16  0.000000     0.000000  \n",
       "17  0.000000     0.000000  \n",
       "18  0.000000     0.000000  \n",
       "19  0.000000     0.000000  \n",
       "20  0.000000     0.000000  \n",
       "21  0.000000     0.000000  \n",
       "22  0.000000     0.052632  \n",
       "23  0.000000     0.000000  \n",
       "24  0.000000     0.000000  \n",
       "25  0.000000     0.000000  \n",
       "26  0.000000     0.000000  \n",
       "27  0.000000     0.000000  \n",
       "28  0.000000     0.000000  \n",
       "29  0.000000     0.000000  \n",
       "30  0.000000     0.000000  \n",
       "31  0.000000     0.033333  \n",
       "32  0.000000     0.000000  \n",
       "33  0.000000     0.000000  \n",
       "34  0.000000     0.033333  \n",
       "35  0.033333     0.033333  \n",
       "36  0.000000     0.000000  \n",
       "37  0.000000     0.000000  \n",
       "\n",
       "[38 rows x 189 columns]"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Toronto_grouped=Toronto_onehot.groupby('Neighbourhood').mean().reset_index()\n",
    "Toronto_grouped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "----Berczy Park----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Business Reply Mail Processing Centre 969 Eastern----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----CN Tower, Bathurst Quay, South Niagara, Harbourfront West, Railway Lands, King and Spadina, Island airport----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Cabbagetown, St. James Town----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Central Bay Street----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Chinatown, Kensington Market, Grange Park----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Christie----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Church and Wellesley----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Davisville----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Davisville North----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Deer Park, Forest Hill SE, Rathnelly, Summerhill West, South Hill----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Design Exchange, Toronto Dominion Centre----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Dovercourt Village, Dufferin----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Exhibition Place, Brockton, Parkdale Village----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----First Canadian Place, Underground city----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Forest Hill West, Forest Hill North----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Harbord, University of Toronto----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----High Park, The Junction South----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----India Bazaar, The Beaches West----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----King, Adelaide, Richmond----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Lawrence Park----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Moore Park, Summerhill East----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----North Toronto West----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Regent Park, Harbourfront----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Roncesvalles, Parkdale----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Rosedale----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Roselawn----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Runnymede, Swansea----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Ryerson, Garden District----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----St. James Town----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Stn A PO Boxes 25 The Esplanade----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Studio District----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----The Annex, North Midtown, Yorkville----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----The Beaches----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----The Danforth West, Riverdale----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Trinity, Little Portugal----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Union Station, Toronto Islands, Harbourfront East----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n",
      "----Victoria Hotel, Commerce Court----\n",
      "                           venue                           freq\n",
      "0                    Yoga Studio                    Yoga Studio\n",
      "1                       Wine Bar                       Wine Bar\n",
      "2          Vietnamese Restaurant          Vietnamese Restaurant\n",
      "3               Video Game Store               Video Game Store\n",
      "4  Vegetarian / Vegan Restaurant  Vegetarian / Vegan Restaurant\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "num_top_venues=5\n",
    "\n",
    "for hood in Toronto_grouped['Neighbourhood']:\n",
    "    print(\"----\"+hood+\"----\")\n",
    "    temp=Toronto_grouped[Toronto_grouped['Neighbourhood']==hood].T.reset_index()\n",
    "    temp.columns=['venue','freq']\n",
    "    temp=temp.iloc[1:]\n",
    "    temp['freq']=temp.round({'freq':2})\n",
    "    print(temp.sort_values('freq',ascending=False).reset_index(drop=True).head(num_top_venues))\n",
    "    print('\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Pandas dataframe\n",
    "def return_most_common_venues(row,num_top_venues):\n",
    "    row_categories=row.iloc[1:]\n",
    "    row_categories_sorted=row_categories.sort_values(ascending=False)\n",
    "    \n",
    "    return row_categories_sorted.index.values[0:num_top_venues]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>1st Most Common Venues</th>\n",
       "      <th>2nd Most Common Venues</th>\n",
       "      <th>3rd Most Common Venues</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Berczy Park</td>\n",
       "      <td>Farmers Market</td>\n",
       "      <td>Beer Bar</td>\n",
       "      <td>Cocktail Bar</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Breakfast Spot</td>\n",
       "      <td>Basketball Stadium</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Bistro</td>\n",
       "      <td>Fish Market</td>\n",
       "      <td>Clothing Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n",
       "      <td>Light Rail Station</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Burrito Place</td>\n",
       "      <td>Brewery</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Spa</td>\n",
       "      <td>Auto Workshop</td>\n",
       "      <td>Farmers Market</td>\n",
       "      <td>Pizza Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>CN Tower, Bathurst Quay, South Niagara, Harbou...</td>\n",
       "      <td>Airport Lounge</td>\n",
       "      <td>Airport Service</td>\n",
       "      <td>Airport Terminal</td>\n",
       "      <td>Harbor / Marina</td>\n",
       "      <td>Sculpture Garden</td>\n",
       "      <td>Airport Food Court</td>\n",
       "      <td>Airport Gate</td>\n",
       "      <td>Bar</td>\n",
       "      <td>Boat or Ferry</td>\n",
       "      <td>Boutique</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Cabbagetown, St. James Town</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Café</td>\n",
       "      <td>Butcher</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Caribbean Restaurant</td>\n",
       "      <td>Playground</td>\n",
       "      <td>Pet Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Central Bay Street</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Spa</td>\n",
       "      <td>Café</td>\n",
       "      <td>Bubble Tea Shop</td>\n",
       "      <td>Ramen Restaurant</td>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Portuguese Restaurant</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                       Neighbourhood 1st Most Common Venues  \\\n",
       "0                                        Berczy Park         Farmers Market   \n",
       "1  Business Reply Mail Processing Centre 969 Eastern     Light Rail Station   \n",
       "2  CN Tower, Bathurst Quay, South Niagara, Harbou...         Airport Lounge   \n",
       "3                        Cabbagetown, St. James Town             Restaurant   \n",
       "4                                 Central Bay Street            Coffee Shop   \n",
       "\n",
       "  2nd Most Common Venues 3rd Most Common Venues 4th Most Common Venue  \\\n",
       "0               Beer Bar           Cocktail Bar    Seafood Restaurant   \n",
       "1            Yoga Studio             Restaurant         Burrito Place   \n",
       "2        Airport Service       Airport Terminal       Harbor / Marina   \n",
       "3            Coffee Shop                 Bakery    Italian Restaurant   \n",
       "4     Italian Restaurant                    Spa                  Café   \n",
       "\n",
       "  5th Most Common Venue 6th Most Common Venue 7th Most Common Venue  \\\n",
       "0        Breakfast Spot    Basketball Stadium    Italian Restaurant   \n",
       "1               Brewery  Fast Food Restaurant                   Spa   \n",
       "2      Sculpture Garden    Airport Food Court          Airport Gate   \n",
       "3                  Café               Butcher                   Pub   \n",
       "4       Bubble Tea Shop      Ramen Restaurant   Japanese Restaurant   \n",
       "\n",
       "  8th Most Common Venue 9th Most Common Venue 10th Most Common Venue  \n",
       "0                Bistro           Fish Market         Clothing Store  \n",
       "1         Auto Workshop        Farmers Market            Pizza Place  \n",
       "2                   Bar         Boat or Ferry               Boutique  \n",
       "3  Caribbean Restaurant            Playground              Pet Store  \n",
       "4    Seafood Restaurant        Sandwich Place  Portuguese Restaurant  "
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_top_venues=10\n",
    "\n",
    "indicators=['st','nd','rd']\n",
    "\n",
    "columns=['Neighbourhood']\n",
    "for ind in np.arange(num_top_venues):\n",
    "    try:\n",
    "        columns.append('{}{} Most Common Venues'.format(ind+1, indicators[ind]))\n",
    "    except:\n",
    "        columns.append('{}th Most Common Venue'.format(ind+1))\n",
    "        \n",
    "neighbourhoods_venues_sorted=pd.DataFrame(columns=columns)\n",
    "neighbourhoods_venues_sorted['Neighbourhood']=Toronto_grouped['Neighbourhood']\n",
    "for ind in np.arange(Toronto_grouped.shape[0]):\n",
    "    neighbourhoods_venues_sorted.iloc[ind, 1:]=return_most_common_venues(Toronto_grouped.iloc[ind,:],num_top_venues)\n",
    "    \n",
    "neighbourhoods_venues_sorted.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Cluster neighborhoods \n",
    "from sklearn.cluster import KMeans\n",
    "# set number of clusters\n",
    "kclusters = 5\n",
    "Toronto_grouped_clustering = Toronto_grouped.drop('Neighbourhood', 1)\n",
    "# run k-means clustering\n",
    "kmeans = KMeans(n_clusters = kclusters, random_state = 0).fit(Toronto_grouped_clustering)\n",
    "# check cluster labels generated for each row in the dataframe\n",
    "kmeans.labels_[0:10] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Borough</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Cluster Labels</th>\n",
       "      <th>1st Most Common Venues</th>\n",
       "      <th>2nd Most Common Venues</th>\n",
       "      <th>3rd Most Common Venues</th>\n",
       "      <th>4th Most Common Venue</th>\n",
       "      <th>5th Most Common Venue</th>\n",
       "      <th>6th Most Common Venue</th>\n",
       "      <th>7th Most Common Venue</th>\n",
       "      <th>8th Most Common Venue</th>\n",
       "      <th>9th Most Common Venue</th>\n",
       "      <th>10th Most Common Venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>M4E</td>\n",
       "      <td>The Beaches</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.676357</td>\n",
       "      <td>-79.293031</td>\n",
       "      <td>2</td>\n",
       "      <td>Other Great Outdoors</td>\n",
       "      <td>Health Food Store</td>\n",
       "      <td>Trail</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Neighborhood</td>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>Dance Studio</td>\n",
       "      <td>Event Space</td>\n",
       "      <td>Ethiopian Restaurant</td>\n",
       "      <td>Eastern European Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>M4K</td>\n",
       "      <td>The Danforth West, Riverdale</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.679557</td>\n",
       "      <td>-79.352188</td>\n",
       "      <td>0</td>\n",
       "      <td>Greek Restaurant</td>\n",
       "      <td>Ice Cream Shop</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Cosmetics Shop</td>\n",
       "      <td>Brewery</td>\n",
       "      <td>Bubble Tea Shop</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>Pub</td>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>M4L</td>\n",
       "      <td>India Bazaar, The Beaches West</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.668999</td>\n",
       "      <td>-79.315572</td>\n",
       "      <td>0</td>\n",
       "      <td>Park</td>\n",
       "      <td>Brewery</td>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>Burger Joint</td>\n",
       "      <td>Burrito Place</td>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>Fish &amp; Chips Shop</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Steakhouse</td>\n",
       "      <td>Sushi Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>M4M</td>\n",
       "      <td>Studio District</td>\n",
       "      <td>East Toronto</td>\n",
       "      <td>43.659526</td>\n",
       "      <td>-79.340923</td>\n",
       "      <td>0</td>\n",
       "      <td>Café</td>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>Bakery</td>\n",
       "      <td>Latin American Restaurant</td>\n",
       "      <td>Bar</td>\n",
       "      <td>Fish Market</td>\n",
       "      <td>Neighborhood</td>\n",
       "      <td>Seafood Restaurant</td>\n",
       "      <td>Sandwich Place</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>M4N</td>\n",
       "      <td>Lawrence Park</td>\n",
       "      <td>Central Toronto</td>\n",
       "      <td>43.728020</td>\n",
       "      <td>-79.388790</td>\n",
       "      <td>4</td>\n",
       "      <td>Park</td>\n",
       "      <td>Swim School</td>\n",
       "      <td>Bus Line</td>\n",
       "      <td>Fish &amp; Chips Shop</td>\n",
       "      <td>Farmers Market</td>\n",
       "      <td>Falafel Restaurant</td>\n",
       "      <td>Event Space</td>\n",
       "      <td>Ethiopian Restaurant</td>\n",
       "      <td>Eastern European Restaurant</td>\n",
       "      <td>Dog Run</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Postal Code                   Neighbourhood          Borough   Latitude  \\\n",
       "0         M4E                     The Beaches     East Toronto  43.676357   \n",
       "1         M4K    The Danforth West, Riverdale     East Toronto  43.679557   \n",
       "2         M4L  India Bazaar, The Beaches West     East Toronto  43.668999   \n",
       "3         M4M                 Studio District     East Toronto  43.659526   \n",
       "4         M4N                   Lawrence Park  Central Toronto  43.728020   \n",
       "\n",
       "   Longitude  Cluster Labels 1st Most Common Venues 2nd Most Common Venues  \\\n",
       "0 -79.293031               2   Other Great Outdoors      Health Food Store   \n",
       "1 -79.352188               0       Greek Restaurant         Ice Cream Shop   \n",
       "2 -79.315572               0                   Park                Brewery   \n",
       "3 -79.340923               0                   Café            Coffee Shop   \n",
       "4 -79.388790               4                   Park            Swim School   \n",
       "\n",
       "  3rd Most Common Venues 4th Most Common Venue      5th Most Common Venue  \\\n",
       "0                  Trail                   Pub               Neighborhood   \n",
       "1     Italian Restaurant        Cosmetics Shop                    Brewery   \n",
       "2         Sandwich Place          Burger Joint              Burrito Place   \n",
       "3     Italian Restaurant                Bakery  Latin American Restaurant   \n",
       "4               Bus Line     Fish & Chips Shop             Farmers Market   \n",
       "\n",
       "  6th Most Common Venue 7th Most Common Venue 8th Most Common Venue  \\\n",
       "0           Yoga Studio          Dance Studio           Event Space   \n",
       "1       Bubble Tea Shop            Restaurant                   Pub   \n",
       "2  Fast Food Restaurant     Fish & Chips Shop    Italian Restaurant   \n",
       "3                   Bar           Fish Market          Neighborhood   \n",
       "4    Falafel Restaurant           Event Space  Ethiopian Restaurant   \n",
       "\n",
       "         9th Most Common Venue       10th Most Common Venue  \n",
       "0         Ethiopian Restaurant  Eastern European Restaurant  \n",
       "1                  Pizza Place                  Coffee Shop  \n",
       "2                   Steakhouse             Sushi Restaurant  \n",
       "3           Seafood Restaurant               Sandwich Place  \n",
       "4  Eastern European Restaurant                      Dog Run  "
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighbourhoods_venues_sorted.insert(0,'Cluster Labels', kmeans.labels_)\n",
    "\n",
    "Toronto_merged = PC_T\n",
    "Toronto_merged = Toronto_merged.merge(neighbourhoods_venues_sorted, on = 'Neighbourhood')\n",
    "\n",
    "Toronto_merged.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x12018d5d0>"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create map\n",
    "map_clusters = folium.Map(location = [43.653963,-79.387207], zoom_start = 11)\n",
    "\n",
    "# set color scheme for the clusters\n",
    "x = np.arange(kclusters)\n",
    "ys = [i + x + (i * x) ** 2 for i in range(kclusters)]\n",
    "colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n",
    "rainbow = [colors.rgb2hex(i) for i in colors_array]\n",
    "\n",
    "# add markers to the map\n",
    "markers_colors = []\n",
    "for lat, lon, poi, cluster in zip(Toronto_merged['Latitude'], Toronto_merged['Longitude'], Toronto_merged['Neighbourhood'], Toronto_merged['Cluster Labels']):\n",
    "    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n",
    "    folium.CircleMarker(\n",
    "        [lat, lon],\n",
    "        radius = 5,\n",
    "        popup = label,\n",
    "        color = rainbow[cluster - 1],\n",
    "        fill = True,\n",
    "        fill_color = rainbow[cluster - 1],\n",
    "        fill_opacity = 0.7).add_to(map_clusters)\n",
    "       \n",
    "map_clusters\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
